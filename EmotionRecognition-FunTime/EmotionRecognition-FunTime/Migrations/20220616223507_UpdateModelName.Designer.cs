// <auto-generated />
using System;
using EmotionRecognition_FunTime.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmotionRecognition_FunTime.Migrations
{
    [DbContext(typeof(FunTimeDbContext))]
    [Migration("20220616223507_UpdateModelName")]
    partial class UpdateModelName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmotionRecognition_FunTime.Models.TextAnalyticModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sentiment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TextAnalyticModel");
                });

            modelBuilder.Entity("EmotionRecognition_FunTime.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EmotionRecognition_FunTime.Models.UserQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FollowedUpQuestion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasUser")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFollowing")
                        .HasColumnType("bit");

                    b.Property<Guid>("QuestionAnalyticsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("QuestionAnalyticsId");

                    b.ToTable("QuestionUsers");
                });

            modelBuilder.Entity("EmotionRecognition_FunTime.Models.UserQuestion", b =>
                {
                    b.HasOne("EmotionRecognition_FunTime.Models.TextAnalyticModel", "QuestionAnalytics")
                        .WithMany()
                        .HasForeignKey("QuestionAnalyticsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuestionAnalytics");
                });
#pragma warning restore 612, 618
        }
    }
}
